Illinois Taxes - 65+ City
https://docs.google.com/document/d/1SWHB7e1dK6GW7FftfUyOXI80PLcEamTrxOVMDzVIsUE/edit#heading=h.gjdgxs

@john.putz
First Export. Approved by James and Aby Yusuf
Dev Name: Dmitry S.
Story type Name: #1076 Illinois Taxes - 65+ City
FCD: https://docs.google.com/document/d/1FUx5L10KnITlFOlZB3a9r6WwqA_kMD1SXzG0u_GQuhY/edit#
Sample story: https://pipeline-staging.locallabs.com/stories/511744931
Period: Once
Total Count:
Max Project Count by client:
MB -
LGIS -
_____________________________________________________

STAGE TABLE DEFINITION
insert into stage_definition_configurations (tbl, definition) select 'illinois_taxes_65_city_staging','{"city":"varchar(100)","value":"varchar(10)","story_table":"longtext"}';


#870

STAGE TABLE CREATION
bundle exec ruby Loki.rb :hle@hle_router --switch='stage_definition' --task='create_tbl' --config_id=870 -t

STAGE POPULATION CONFIGURATION
insert into stage_population_configurations(project_name, tbl, definition) select 'Illinois Taxes - 65+ City', 'illinois_taxes_65_city_staging', '{"known_entities":{"project_name":"Illinois Taxes - 65+ City"},"resources":{":root":{"host":"db02","db":"loki_storycreator","tbl":"sort_by_once","identifier":"id","mapping":{}}},"stage_derivations":{"source_id":{"method":"as_int","arguments":{"raw_field":"id"}},"staging":{"stage_fields":["EMPTYSET"],"method":"hle_s1076_illinois_taxes_65_city_population","arguments":{}}}}';

population_config_id: #969

STAGE POPULATION:
$ cd ~/Loki/procedures
bundle exec ruby Loki.rb :hle@hle_router --switch='stage_population' --config_id=969 -t --slack_id=UKYAGBYC9


STORY CREATOR CONFIGURATION:
insert into storycreator_configurations (tbl, template, extension, export_arguments) select 'illinois_taxes_65_city_staging', 'hle_s1076_illinois_taxes_65_city_creation', 'stories', 'where (story_created != 1 or story_created is null) and publication_name is not null and publication_name != ""';

creation_config_id: #853

STORY CREATION COMMAND:
bundle exec ruby Loki.rb :hle@hle_router --switch='story_creation' --config_id=853 -t --slack_id=UKYAGBYC9


STAGING: STORY EXPORT CONFIGURATION
см файл ‘annual sources and output’

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=853 --population_config_id=969 --story_section_ids=2 --story_tag_ids=3 --photobuckets='Economy' --job_item_name_description='Illinois Taxes - 65+ City' -t --where="client_id = 120"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=853 --population_config_id=969 --story_section_ids='2,16' --story_tag_ids=126 --photobuckets='Economy' --job_item_name_description='Illinois Taxes - 65+ City' -t --where="client_id = 91"

STAGING: EXPORT STORIES
bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' -t -creator='Dmitry Suschinsky' --stage_tbl_org --config_ids= --slack_id=UKYAGBYC9 --threads_count=15



FIRST FEEDBACK
________________________________________
irb ->
load 'Loki.rb'
Hle::Story::Feedback.stories_feedback('511701546,511701553,511701552')

bundle exec ruby Loki.rb :hle_tools@stories_feedback -t --story_pl_ids=511744931,511744933,511744934


!!!!!!!!!!!!!!FCD!!!!!!!!!!!!!!!!!!!!
________________________________________________________________________________________________________________________________________

SCHEDULER:
__________
population_config_id: #969
creation_config_id: #853

tbl: illinois_taxes_65_city_staging
desc: Illinois Taxes - 65+ City

config_id - population_config_id

1076 -- 10/30/Oct 3 backdate the rest to Sept. 30
bundle exec ruby Loki.rb :hle@hle_scheduler -t --config_id=969 --limit=10 --start_date='2020-10-03' --total_days_till_end_date=30

__________________________________________________
чтоб проверить шедулер, что он "окейно" отработал:

select publication_name, min(publish_on), max(publish_on), count(*) from 'illinois_taxes_65_city_staging' group by publication_name;

______________________________________
PRODUCTION: STORY EXPORT CONFIGURATION
см файл ‘annual sources and output’
______________________________________

--where="client_name like 'MM - %'"

РАЗБИВКА ПО КЛИНЕТАМ!!!
LGIS + MB
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=853 --population_config_id=969 --story_section_ids=2 --story_tag_ids=126 --photobuckets='Economy' --job_item_name_description='Illinois Taxes - 65+ City' -t --prod --limit_config=1 --where="client_id = 91"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=853 --population_config_id=969 --story_section_ids=16 --story_tag_ids=3 --photobuckets='Economy' --job_item_name_description='Illinois Taxes - 65+ City' -t --prod --limit_config=1 --where="client_id = 120"

______________________________________

select * from story_export_configurations_v2 where tbl = 'illinois_taxes_65_city_staging' and export_name like '%production%' order by id DESC;

______________________________________
если все ок, то выполняем без --limit_config=1

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=853 --population_config_id=969 --story_section_ids=2 --story_tag_ids=126 --photobuckets='Economy' --job_item_name_description='Illinois Taxes - 65+ City' -t --prod --where="client_id = 91"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=853 --population_config_id=969 --story_section_ids=16 --story_tag_ids=3 --photobuckets='Economy' --job_item_name_description='Illinois Taxes - 65+ City' -t --prod --where="client_id = 120"
_________
повторяем

select * from story_export_configurations_v2 where tbl = 'illinois_taxes_65_city_staging' and export_name like '%production%' order by id DESC;


______________________
для построения таблицы
______________________

select s.client_name, s.publication_name, s.publication_id as project_id, ec.id as config_id, s.max_publish_on, s.total_stories from (select client_name, publication_name, publication_id, max(publish_on) as max_publish_on, count(*) as total_stories from illinois_taxes_65_city_staging group by publication_name) s join (select * from story_export_configurations_v2 where tbl ='illinois_taxes_65_city_staging' and export_name like '%production%') ec on ec.community_id = s.publication_id order by s.publication_name;


__________________________
PRODUCTION: EXPORT STORIES
__________________________

bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' --prod --stage_tbl_org --creator='Dmitry Suschinsky' -t --hunter=0 --publish_on --published=1 --config_ids='372937'

_____
IF OK
_____

--threads_count=7 | 13140961 | 13140969

bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' --prod --stage_tbl_org --creator='Dmitry Suschinsky' -t --hunter=0 --publish_on --published=1 --config_ids='372937,372959,372958,372969,372949,372941,372945,372950,372963,372934,372947,372953,372964,372951,372942,372952,372960,372940,372939,372936,372938,372956,372955,372962,372948,372933,372966,372943,372961,372954,372965,372967,372968,372935,372944,372946,372957' --threads_count=1 --slack_id=UKYAGBYC9
___________________________


ФИНАЛЬНАЯ ТАБЛИЦА ДЛЯ ДЖОНА
___________________________

SELECT CONVERT(GROUP_CONCAT(job_item_id SEPARATOR ',') USING utf8)
FROM story_export_configurations_v2
WHERE tbl = 'illinois_taxes_65_city_staging' AND
      export_name LIKE '%production%';

# pipeline-core-replica2.jnswire_prod query:

SELECT headline, c.name AS publication, concat('https://pipeline.locallabs.com/stories/', s.id) AS url,
       published_at, ji.name AS job_item, cc.name AS client
FROM stories AS s
JOIN communities AS c
  ON s.community_id = c.id
JOIN client_companies AS cc
  ON c.client_company_id = cc.id
JOIN data_entry_leads AS l
  ON l.id = s.lead_id
JOIN job_items AS ji
  ON l.job_item_id=ji.id
WHERE published_at >= '2020-07-29' AND
      deleted = 0 AND
      l.job_item_id IN (...)
ORDER BY c.name;




REMINDER TOOL
___________________________

INSERT INTO loki_storycreator.hle_reminders
    (
        hle_assignments_number, story_type_name, story_type_stage_table,
        dev_name, slack_handle, dev_email,
        story_frequency, reminders_on, manual_export_required, reminder_frequency, reminder_message,
        last_manual_export, manual_export_blocked, on_cron, warnings_on, warning_count_min, warning_frequency, warning_fix_blocked,
        data_source_checker_on, data_source_host, data_source_db, data_source_update_query
    )
VALUES
    (
        1076, 'Illinois Taxes - 65+ City', 'illinois_taxes_65_city_staging',
        'Dmitiry Suschinsky', '@dmitiry.suschinsky', 'dsuschinsky@gmail.com',
        'year', 1, 1, 'annually', 'The Dataset located on db06.voters_2016.census_details%',
        '2020-07-11', 0, 0, 0, 20000, 'annually', 0,
         1, 'db06','voters_2016', 'select date(max(postedTime)) date from usa_raw.census_details;'
    );



# Creator: Dmitry Suschinsky
# Story type: Illinois Taxes - 65+ City
# Template:
# Created: September 2020

# tbl: illinois_taxes_65_city_staging
# db01.usa_raw.national_rent_report_by_city
# branch: s1076_illinois_taxes_65_city_d_sushi
# s1076_illinois_taxes_65_city.rb

def s1076_illinois_taxes_65_city_stage_population(line, arguments)
  counter     = 0
  mb_id       = 120
  lgis_id     = 91
  environment = 'production'
  records = source_query
  table = get_table
  records.each_with_index do |rec, rec_num|
    print 'Month: '
    print "#{rec[:month]} ".yellow
    print '| recs number: '
    print "#{rec[:org_id]} ".green

    mb_pubs   = get_journal_from_org_id(rec[:org_id], environment, mb_id)
    lgis_pubs   = get_journal_from_org_id(rec[:org_id], environment, lgis_id)
    publications = mb_pubs + lgis_pubs
    publications.each_with_index do |publication, pub_num|
      publication.transform_keys!(&:to_sym)
      puts "#{rec_num * publications.size + pub_num + 1}/#{records.size * publications.size}".yellow

      host = Route_noprefix.new(host: DB02, stage_db: 'loki_storycreator')
      h    = {}

      h['organization_id']           = rec[:org_id]
      h['publication_id']            = publication[:id].to_i
      h['publication_name']          = publication[:publication_name]
      h['client_id']                 = publication[:client_id]
      h['client_name']               = publication[:client_name]
      h['source_table_id']           = 19407
      h['value']                     = rec[:value]
      h['city']                      = rec[:city]
      h['story_table']               = table.to_json

      h.transform_keys!(&:to_s)
      rules = insert_ignore_rules(h.escaped)
      query = "INSERT IGNORE INTO #{host.stage_db}.#{@config['target_table']}#{rules}"

      host.client.query(query)
      host.client.close
      counter += 1
    end
  end

  puts "Source size: #{records.length}"
  puts "Counter:     #{counter}"

  'INVALID' # a very important string!!!
end

def s1076_illinois_taxes_65_city_stage_creation(options)
  count = @stage_selection.count
  @stage_selection.each_with_index do |stage, i|
    print "\n PROCESSING #{i+1}/#{count}\n"

    table    = StoryTable.new.from_json(stage['story_table']).to_html
    city     = stage['city']
    value    = Numbers.money((stage['value'].to_i * 0.093).to_i)

    url_1 = "https://www.illinoispolicy.org/every-state-with-a-progressive-tax-also-taxes-retirement-income/"
    url_2 = "https://twitter.com/VoteForFairness"
    url_3 = "https://smartasset.com/retirement/illinois-retirement-taxes"

    export = {}
    export['headline'] = <<~HEADER.squeeze(' ').chomp
      Pritzker Tax Hike Amendment: average retiree in #{city} to pay up to #{value} more in state income tax
    HEADER
    export['teaser'] = <<~TEASER.squeeze(' ').chomp
      The Pritzker Tax Hike Amendment would increase the average retiree's income tax in #{city} by up to #{value}, a 9.3-percent tax increase.
    TEASER
    output = <<~BODY.squeeze(' ').chomp
      The Pritzker Tax Hike Amendment would increase the average retiree's income tax in #{city} by up to #{value}, a 9.3-percent tax increase.
      Currently, retirees in Illinois are not subject to paying state income tax. With Governor Pritzker’s new proposal, retirees on average would have to pay an income tax of 4.7 percent while some will have to pay as much as 9.3 percent. According to #{"Illinoispolicy.org".to_link(url_1)}, retirees are one of the groups that has been least likely to leave the state. If their income is threatened by a new tax, that could change.
      While claiming the progressive tax is not a retirement tax, #{"VoteForFairness".to_link(url_2)} invited Daniel Biss to speak at their virtual rally. In 2018, Biss said, “I would only consider taxing retirement income once we’ve amended the Illinois Constitution to allow for a progressive income tax." #{"Smartasset.com".to_link(url_3)} states that while Illinois currently has no tax on retirement income, the sales and property taxes are among the highest in the country.
      #{"Potential tax implications".to_table_title}#{table}
    BODY
    prepare_output(stage, output, export, options)
  end
end

def source_query
  db06 = Route_noprefix.new(host: DB06, raw_db: 'voters_2016')
  db06.client.query('use voters_2016;')

  query = <<~SQL
    SELECT *, IFNULL(geo_name_only, geo_name) AS city FROM census_details c
    JOIN census_details_uniq_geos g ON c.match_id = g.id
    WHERE concept = 'MEDIAN HOUSEHOLD INCOME IN THE PAST 12 MONTHS (IN 2018 INFLATION-ADJUSTED DOLLARS) BY AGE OF HOUSEHOLDER' AND
          label = 'Estimate!!Median household income in the past 12 months (in 2018 inflation-adjusted dollars) --!!Householder 65 years and over' AND
          state = 17 AND c.geo_type = 'place' AND value > 0;
  SQL

  source_1 = db06.client.query(query).to_a

  records = []
  source_1.each do |el|
    record = {
        city: el['city'], value: el['value'], org_id: el['pl_production_org_id']
    }
    records << record
  end
  db06.client.close

  records
end

def get_table
  table = StoryTable.new
  table.header = ['Income', 'Taxes paid at 4.7%', 'Taxes paid at proposed 9.3%']
  table.content = []

  result = [
      {income: '$25,000', value: 25000},
      {income: '$50,000', value: 50000},
      {income: '$75,000', value: 75000},
      {income: '$100,000', value: 100000},
      {income: '$250,000', value: 250000},
      {income: '$500,000', value: 500000}
  ]

  result.each do |row|
    table.content << [row[:income], Numbers.money(row[:value] * 0.047), Numbers.money(row[:value] * 0.093)]
  end
  table
end