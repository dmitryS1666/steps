Arizona - Professional License Type Expiring in the Coming Month (City - Month)
https://docs.google.com/document/d/1SWHB7e1dK6GW7FftfUyOXI80PLcEamTrxOVMDzVIsUE/edit#heading=h.gjdgxs

@john.putz
First Export. Approved by James and Aby Yusuf
Dev Name: Dmitry S.
Story type Name: #976 Arizona - Professional License Type Expiring in the Coming Month (City - Month)
FCD: https://docs.google.com/document/d/1QU6q5tXNoGvzBDWXnVJAKCnzIGtMGlonR1ApSqNqVEs/edit#
Sample story: https://pipeline-staging.locallabs.com/stories/511743298
Period: October 2020
Total Count: 680
Max Project Count by client:
MB - 198
MM - 111
_____________________________________________________

STAGE TABLE DEFINITION
insert into stage_definition_configurations (tbl, definition) select 'ar_prof_license_type_exp_coming_month_city_m_staging','{"board":"varchar(100)","license_type":"varchar(100)","license_type_count":"varchar(100)","city":"varchar(100)","month":"varchar(50)","license_holder":"varchar(150)","lapse_date":"varchar(50)","issued_date":"varchar(50)","story_table1":"longtext"}';


#840

STAGE TABLE CREATION
bundle exec ruby Loki.rb :hle@hle_router --switch='stage_definition' --task='create_tbl' --config_id=840 -t

STAGE POPULATION CONFIGURATION
insert into stage_population_configurations(project_name, tbl, definition) select 'Arizona - Professional License Type Expiring in the Coming Month (City - Month)', 'ar_prof_license_type_exp_coming_month_city_m_staging', '{"known_entities":{"project_name":"Arizona - Professional License Type Expiring in the Coming Month (City - Month)"},"resources":{":root":{"host":"db02","db":"loki_storycreator","tbl":"sort_by_once","identifier":"id","mapping":{}}},"stage_derivations":{"source_id":{"method":"as_int","arguments":{"raw_field":"id"}},"staging":{"stage_fields":["EMPTYSET"],"method":"arizona_professional_license_type_exp_coming_month_city_m_population","arguments":{}}}}';

population_config_id: #905

STAGE POPULATION:
$ cd ~/Loki/procedures
bundle exec ruby Loki.rb :hle@hle_router --switch='stage_population' --config_id=905 -t --slack_id=UKYAGBYC9


STORY CREATOR CONFIGURATION:
insert into storycreator_configurations (tbl, template, extension, export_arguments) select 'ar_prof_license_type_exp_coming_month_city_m_staging', 'arizona_professional_license_type_exp_coming_month_city_m_creation', 'stories', 'where (story_created != 1 or story_created is null) and publication_name is not null and publication_name != ""';

creation_config_id: #825

STORY CREATION COMMAND:
bundle exec ruby Loki.rb :hle@hle_router --switch='story_creation' --config_id=825 -t --slack_id=UKYAGBYC9


STAGING: STORY EXPORT CONFIGURATION
см файл ‘annual sources and output’

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=825 --population_config_id=905 --story_section_ids=2 --story_tag_ids=3 --photobuckets='General Business - 1000x667' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Month (City - Month)' -t --where="client_id = 120"  --slack_id=UKYAGBYC9
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=825 --population_config_id=905 --story_section_ids=16 --story_tag_ids=9 --photobuckets='General Business - 1000x667' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Month (City - Month)' -t --where="stage.client_name like 'MM - %'"  --slack_id=UKYAGBYC9

STAGING: EXPORT STORIES
bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' -t -creator='Dmitry Suschinsky' --stage_tbl_org --config_id=340619
#/////#
bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' -creator='Dmitry Suschinsky' --stage_tbl_org --config_id=363613  --slack_id=UKYAGBYC9 --threads_count=7




FIRST FEEDBACK
________________________________________
irb ->
load 'Loki.rb'
Hle::Story::Feedback.stories_feedback('511701546,511701553,511701552')

bundle exec ruby Loki.rb :hle_tools@stories_feedback -t --story_pl_ids=511742927,511742939,511742938


!!!!!!!!!!!!!!FCD!!!!!!!!!!!!!!!!!!!!
________________________________________________________________________________________________________________________________________

SCHEDULER:
__________
population_config_id: #905
creation_config_id: #825

tbl: ar_prof_license_type_exp_coming_month_city_m_staging
desc: Arizona - Professional License Type Expiring in the Coming Month (City - Month)

config_id - population_config_id

976 -- 20/10/Sept 20
bundle exec ruby Loki.rb :hle@hle_scheduler -t --config_id=905 --limit=20 --start_date='2020-09-20' --total_days_till_end_date=10
976 -- 10/30/Oct. 29
bundle exec ruby Loki.rb :hle@hle_scheduler -t --config_id=905 --limit=10 --start_date='2020-10-29' --total_days_till_end_date=30

__________________________________________________
чтоб проверить шедулер, что он "окейно" отработал:

select publication_name, min(publish_on), max(publish_on), count(*) from 'ar_prof_license_type_exp_coming_month_city_m_staging' group by publication_name;

______________________________________
PRODUCTION: STORY EXPORT CONFIGURATION
см файл ‘annual sources and output’
______________________________________

--where="client_name like 'MM - %'"

РАЗБИВКА ПО КЛИНЕТАМ!!!

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=825 --population_config_id=905 --story_section_ids=2 --story_tag_ids=9 --photobuckets='General Business - 1000x667' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Month (City - Month)' -t --prod --limit_config=1 --where="client_id = 120"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=825 --population_config_id=905 --story_section_ids=16 --story_tag_ids=3 --photobuckets='General Business - 1000x667' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Month (City - Month)' -t --prod --limit_config=1 --where="stage.client_name like 'MM - %'"

______________________________________

select * from story_export_configurations_v2 where tbl = 'ar_prof_license_type_exp_coming_month_city_m_staging' and export_name like '%production%' order by id DESC;

______________________________________
если все ок, то выполняем без --limit_config=1

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=825 --population_config_id=905 --story_section_ids=2 --story_tag_ids=9 --photobuckets='General Business - 1000x667' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Month (City - Month)' -t --prod --where="client_id = 120"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=825 --population_config_id=905 --story_section_ids=16 --story_tag_ids=3 --photobuckets='General Business - 1000x667' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Month (City - Month)' -t --prod --where="stage.client_name like 'MM - %'"
_________
повторяем

select * from story_export_configurations_v2 where tbl = 'ar_prof_license_type_exp_coming_month_city_m_staging' and export_name like '%production%' order by id DESC;


______________________
для построения таблицы
______________________

select s.client_name, s.publication_name, s.publication_id as project_id, ec.id as config_id, s.max_publish_on, s.total_stories from (select client_name, publication_name, publication_id, max(publish_on) as max_publish_on, count(*) as total_stories from ar_prof_license_type_exp_coming_month_city_m_staging group by publication_name) s join (select * from story_export_configurations_v2 where tbl ='ar_prof_license_type_exp_coming_month_city_m_staging' and export_name like '%production%') ec on ec.community_id = s.publication_id order by s.publication_name;


__________________________
PRODUCTION: EXPORT STORIES
__________________________

bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' --prod --stage_tbl_org --creator='Dmitry Suschinsky' -t --hunter=0 --publish_on --published=1 --config_ids='348144'

_____
IF OK
_____

--threads_count=7 | 13140961 | 13140960

bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' --prod --stage_tbl_org --creator='Dmitry Suschinsky' -t --hunter=0 --publish_on --published=1 --config_ids='364249,364257,364264,364262,364255,364263,364256,364250,364253,364259,364252,364261,364260,364258,364251,364254' --threads_count=7
___________________________


ФИНАЛЬНАЯ ТАБЛИЦА ДЛЯ ДЖОНА
___________________________

SELECT CONVERT(GROUP_CONCAT(job_item_id SEPARATOR ',') USING utf8)
FROM story_export_configurations_v2
WHERE tbl = 'ar_prof_license_type_exp_coming_month_city_m_staging' AND
      export_name LIKE '%production%';

# pipeline-core-replica2.jnswire_prod query:

SELECT headline, c.name AS publication, concat('https://pipeline.locallabs.com/stories/', s.id) AS url,
       published_at, ji.name AS job_item, cc.name AS client
FROM stories AS s
JOIN communities AS c
  ON s.community_id = c.id
JOIN client_companies AS cc
  ON c.client_company_id = cc.id
JOIN data_entry_leads AS l
  ON l.id = s.lead_id
JOIN job_items AS ji
  ON l.job_item_id=ji.id
WHERE published_at >= '2020-09-19' AND
      deleted = 0 AND
      l.job_item_id IN (216915,216922,216921,216918,216924,216916,216917,216929,216927,216919,216920,216923,216928,216925,216926,216930)
ORDER BY c.name;




REMINDER TOOL
___________________________

INSERT INTO loki_storycreator.hle_reminders
    (
        hle_assignments_number, story_type_name, story_type_stage_table,
        dev_name, slack_handle, dev_email,
        story_frequency, reminders_on, manual_export_required, reminder_frequency, reminder_message,
        last_manual_export, manual_export_blocked, on_cron, warnings_on, warning_count_min, warning_frequency, warning_fix_blocked,
        data_source_checker_on, data_source_host, data_source_db, data_source_update_query
    )
VALUES
    (
        976, 'Arizona - Professional License Type Expiring in the Coming Month (City - Month)', 'ar_prof_license_type_exp_coming_month_city_m_staging',
        'Dmitiry Suschinsky', '@dmitiry.suschinsky', 'dsuschinsky@gmail.com',
        'year', 1, 1, 'annually', 'The Dataset located on db01.usa_raw.ca_report_card_teacher_salaries%',
        '2020-07-11', 0, 0, 0, 20000, 'annually', 0,
         1, 'db1','usa_raw', 'select date(max(postedTime)) date from usa_raw.ca_report_card_teacher_salaries;'
    );



# Creator: Dmitry Suschinsky
# Story type: Arizona - Professional License Type Expiring in the Coming Month (City - Month)
# Template: https://docs.google.com/document/d/1VVOVqdsyilwIC5NZfjt6plqi1_1SS0lRmz7_iJxcrbY/edit?usp=sharing
# Created: August 2020

# tbl: arizona_professional_license_type_exp_coming_month_city_m_staging
# db01.usa_raw.arizona_professional_licenseing
# branch: s976_arizona_professional_license_type_exp_coming_month_city_m_d_sushi
# s976_arizona_professional_license_type_exp_coming_month_city_m.rb

def arizona_professional_license_type_exp_coming_month_city_m_stage_population(line, arguments)
  db01 = Route_noprefix.new(host: DB01, raw_db: 'usa_raw')
  db01.client.query('use usa_raw;')
  db02 = Route_noprefix.new(host: DB02, stage_db: 'loki_storycreator')
  db02.client.query("use #{db02.stage_db}")
  m_biz_id    = 120
  location    = 'Arizona'
  counter     = 0
  environment = 'production'
  licenses = source_query(db01)

  licenses.each do |license|
    print 'Month: '
    print "#{license[:month]} ".yellow
    print '| licenses number: '
    print "#{license[:license_type_count]} ".green

    m_biz_pubs   = get_journal_from_org_id(license[:org_id], environment, m_biz_id)
    mm_st_pubs   = Hle::Publications.mm_pubs_excluding_states(license[:org_id], environment, location)
    publications = mm_st_pubs + m_biz_pubs
    publications.each do |publication|

      h    = {}
      h['organization_id']           = license[:org_id]
      h['publication_id']            = publication['id'].to_i
      h['publication_name']          = publication['publication_name']
      h['client_id']                 = publication['client_id']
      h['client_name']               = publication['client_name']
      h['source_table_id']           = 22072
      h['month']                     = license[:month]
      h['city']                      = license[:city]
      h['license_type']              = license[:license_type]
      h['license_type_count']        = license[:license_type_count]
      h['story_table']               = license[:table].to_json

      rules = insert_ignore_rules(h.escaped)
      query = "insert ignore into #{@config['target_table']}#{rules}"

      db02.client.query(query)
      counter += 1
    end
  end

  puts "Source size: #{licenses.length}"
  puts "Counter:     #{counter}"

  'INVALID' # a very important string!!!
end

def arizona_professional_license_type_exp_coming_month_city_m_stage_creation(options)
  count = @stage_selection.count
  @stage_selection.each_with_index do |stage, i|
    print "\n PROCESSING #{i+1}/#{count}\n"

    table              = StoryTable.new.from_json(stage['story_table']).to_html
    license_type_count = stage['license_type_count']
    license_type       = stage['license_type'].downcase
    license_type = license_type_count.to_i == 1 ? "#{license_type.gsub(' license', '')} license" : "#{license_type} licenses"
    month              = stage['month']
    city               = stage['city'].split.each(&:capitalize!).join(' ')
    url_1 = "https://elicense.az.gov/ARDC_HomePage"
    url_2 = "https://www.sba.gov/sites/default/files/advocacy/2018-Small-Business-Profiles-AZ.pdf"
    url_3 = "http://www.civiceconomics.com/indie-impact.html"

    is_are = license_type_count.to_i > 1 ? 'are' : 'is'

    count = Numbers.num_to_words(license_type_count).class == String ? Numbers.num_to_words(license_type_count).capitalize : Numbers.num_to_words(license_type_count)
    count_body = Numbers.num_to_words(license_type_count).class == String ? Numbers.num_to_words(license_type_count) : Numbers.num_to_words(license_type_count)

    export = {}
    export['headline'] = <<~HEADER.squeeze(' ').chomp
      #{license_type_count} #{license_type} #{is_are} set to expire in #{city} during #{month}
    HEADER
    export['teaser'] = <<~TEASER.squeeze(' ').chomp
      #{count} #{license_type} #{is_are} set to expire in #{city} during #{month}, according to the State of Arizona.
    TEASER
    output = <<~BODY.squeeze(' ').chomp
      There #{is_are} #{count_body} #{license_type} set to expire in #{city} during #{month}, according to the #{"State of Arizona".to_link(url_1)}.
      More than 99 percent of Arizona's businesses are considered small with more than 40 percent of Arizona employees working for small businesses, according to the #{"U.S. Small Business Administration".to_link(url_2)}.
      A study by #{"Civic Economics".to_link(url_3)} found that when $100 is spent at a locally-owned business, that business puts $47 back into the local economy while the total is just $13 for non-local businesses.
      #{"#{license_type.capitalize} set to expire during #{month}".to_table_title}#{table}
    BODY
    prepare_output(stage, output, export, options)
  end
end

def source_query(db01)
  query_1 = <<~SQL
    select
        COUNT(main.id) as count,
        DATE_FORMAT(main.expiry_date, '%M') as month,
        main.issue_date as issue_date,
        main.expiry_date as expiry_date,
        main.license_type as license_type,
        main.city as city,
        main.state as state,
        org.pl_production_org_id as org_id
    from usa_raw.arizona_professional_licenseing AS main
        left join (select name, name_cleaned from usa_raw.arizona_professional_licenseing__individuals_clean) individuals
                 on main.full_name = individuals.name
        join usa_raw.usa_administrative_division_states state on state.short_name = main.state
        join usa_raw.usa_administrative_division_counties_places_matching org on main.city = org.short_name and org.state_name = state.name
    where (main.state like 'AZ%' OR main.state like 'Arizona%') and
            month(expiry_date) = MONTH(NOW()) + 1 and
            year(expiry_date) = year(now()) and
        city is not null and
        expiry_date is not null
    group by main.city, main.license_type
    order by count DESC;
  SQL

  source_1 = db01.client.query(query_1).to_a

  licenses = []

  source_1.each do |el|
    license = {month: el['month'], city: el['city'], license_type: el['license_type'], license_type_count: el['count'], org_id: el['org_id'],
               table: StoryTable.new(header: ['License Holder', 'License Type', 'Lapse Date', 'Issued Date'], content: get_table_data(db01, el['city'], el['license_type'], el['count']))}

    licenses << license
  end
  db01.client.close

  licenses
end

def get_table_data(db01, city, license_type, count)
  query_2 = <<~SQL
    select individuals.name_cleaned as name_cleaned,
       main.license_type as license_type,
       main.expiry_date as expiry_date,
       main.issue_date as issue_date
    from usa_raw.arizona_professional_licenseing AS main
        left join (select name, name_cleaned from usa_raw.arizona_professional_licenseing__individuals_clean) individuals
        on main.full_name = individuals.name
        join usa_raw.usa_administrative_division_states state on state.short_name = main.state
        join usa_raw.usa_administrative_division_counties_places_matching org on main.city = org.short_name and org.state_name = state.name
    where (main.state like 'AZ%' OR main.state like 'Arizona%') and
          year(expiry_date) = year(now()) and
          month(expiry_date) = MONTH(NOW()) + 1 and city = "#{city}" and license_type = "#{license_type}" and expiry_date is not null and name_cleaned is not null;
  SQL
  res = []
  db01.client.query(query_2).to_a.each do |el|
    res << [el['name_cleaned'], el['license_type'], el['expiry_date'], el['issue_date']]
  end

  raise "Wrong number counts holder licenses!" if count != res.length
  res
end
