Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)
https://docs.google.com/document/d/1SWHB7e1dK6GW7FftfUyOXI80PLcEamTrxOVMDzVIsUE/edit#heading=h.gjdgxs

@john.putz
First Export. Approved by James and Aby Yusuf
Dev Name: Dmitry S.
Story type Name: #978 Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)
FCD: https://docs.google.com/document/d/1aQT1JiyGVjqTPAv4kV9kXNtLVfOOYTWfIq-ohoRQGqk/edit#
Sample story: https://pipeline-staging.locallabs.com/stories/511743974
Period: Q4 2020
Total Count: 1369
Max Project Count by client:
MB - 414
MM - 221
_____________________________________________________

STAGE TABLE DEFINITION
insert into stage_definition_configurations (tbl, definition) select 'ar_prof_license_type_exp_coming_quarter_city_q_staging','{"license_type":"varchar(100)","license_type_count":"varchar(100)","city":"varchar(100)","quarter":"varchar(50)","license_holder":"varchar(150)","lapse_date":"varchar(50)","issued_date":"varchar(50)","story_table1":"longtext"}';


#851

STAGE TABLE CREATION
bundle exec ruby Loki.rb :hle@hle_router --switch='stage_definition' --task='create_tbl' --config_id=851 -t

STAGE POPULATION CONFIGURATION
insert into stage_population_configurations(project_name, tbl, definition) select 'Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)', 'ar_prof_license_type_exp_coming_quarter_city_q_staging', '{"known_entities":{"project_name":"Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)"},"resources":{":root":{"host":"db02","db":"loki_storycreator","tbl":"sort_by_once","identifier":"id","mapping":{}}},"stage_derivations":{"source_id":{"method":"as_int","arguments":{"raw_field":"id"}},"staging":{"stage_fields":["EMPTYSET"],"method":"ar_prof_license_type_exp_coming_quarter_city_q_population","arguments":{}}}}';

population_config_id: #951

STAGE POPULATION:
$ cd ~/Loki/procedures
bundle exec ruby Loki.rb :hle@hle_router --switch='stage_population' --config_id=951 -t --slack_id=UKYAGBYC9


STORY CREATOR CONFIGURATION:
insert into storycreator_configurations (tbl, template, extension, export_arguments) select 'ar_prof_license_type_exp_coming_quarter_city_q_staging', 'ar_prof_license_type_exp_coming_quarter_city_q_creation', 'stories', 'where (story_created != 1 or story_created is null) and publication_name is not null and publication_name != ""';

creation_config_id: #835

STORY CREATION COMMAND:
bundle exec ruby Loki.rb :hle@hle_router --switch='story_creation' --config_id=835 -t --slack_id=UKYAGBYC9


STAGING: STORY EXPORT CONFIGURATION
см файл ‘annual sources and output’

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=835 --population_config_id=951 --story_section_ids=2 --story_tag_ids=34 --photobuckets='High School Test' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)' -t --where="client_id = 120" --slack_id=UKYAGBYC9
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=835 --population_config_id=951 --story_section_ids=16 --story_tag_ids=147 --photobuckets='High School Test' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)' -t --where="stage.client_name like 'MM - %'"

STAGING: EXPORT STORIES
bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' -creator='Dmitry Suschinsky' --stage_tbl_org --threads_count=7 --config_id=340619 --slack_id=UKYAGBYC9



FIRST FEEDBACK
________________________________________
irb ->
load 'Loki.rb'
Hle::Story::Feedback.stories_feedback('511701546,511701553,511701552')

bundle exec ruby Loki.rb :hle_tools@stories_feedback -t --story_pl_ids=511743974,511743942,511743947


!!!!!!!!!!!!!!FCD!!!!!!!!!!!!!!!!!!!!
________________________________________________________________________________________________________________________________________

SCHEDULER:
__________
population_config_id: #951
creation_config_id: #835

tbl: ar_prof_license_type_exp_coming_quarter_city_q_staging
desc: Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)

config_id - population_config_id

952 - 8/200/Aug 1
bundle exec ruby Loki.rb :hle@hle_scheduler -t --config_id=951 --limit=8 --start_date='2020-08-01' --total_days_till_end_date=200

__________________________________________________
чтоб проверить шедулер, что он "окейно" отработал:

select publication_name, min(publish_on), max(publish_on), count(*) from 'ar_prof_license_type_exp_coming_quarter_city_q_staging' group by publication_name;

______________________________________
PRODUCTION: STORY EXPORT CONFIGURATION
см файл ‘annual sources and output’
______________________________________

--where="client_name like 'MM - %'"

РАЗБИВКА ПО КЛИНЕТАМ!!!

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=835 --population_config_id=951 --story_section_ids=2 --story_tag_ids=147 --photobuckets='High School Test' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)' -t --prod --limit_config=1 --where="client_id = 120"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=835 --population_config_id=951 --story_section_ids=16 --story_tag_ids=34 --photobuckets='High School Test' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)' -t --prod --limit_config=1 --where="stage.client_name like 'MM - %'"

______________________________________

select * from story_export_configurations_v2 where tbl = 'ar_prof_license_type_exp_coming_quarter_city_q_staging' and export_name like '%production%' order by id DESC;

______________________________________
если все ок, то выполняем без --limit_config=1

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=835 --population_config_id=951 --story_section_ids=2 --story_tag_ids=147 --photobuckets='High School Test' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)' -t --prod --where="client_id = 120"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=835 --population_config_id=951 --story_section_ids=16 --story_tag_ids=34 --photobuckets='High School Test' --job_item_name_description='Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)' -t --prod --where="stage.client_name like 'MM - %'"
_________
повторяем

select * from story_export_configurations_v2 where tbl = 'ar_prof_license_type_exp_coming_quarter_city_q_staging' and export_name like '%production%' order by id DESC;


______________________
для построения таблицы
______________________

select s.client_name, s.publication_name, s.publication_id as project_id, ec.id as config_id, s.max_publish_on, s.total_stories from (select client_name, publication_name, publication_id, max(publish_on) as max_publish_on, count(*) as total_stories from ar_prof_license_type_exp_coming_quarter_city_q_staging group by publication_name) s join (select * from story_export_configurations_v2 where tbl ='ar_prof_license_type_exp_coming_quarter_city_q_staging' and export_name like '%production%') ec on ec.community_id = s.publication_id order by s.publication_name;


__________________________
PRODUCTION: EXPORT STORIES
__________________________

bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' --prod --stage_tbl_org --creator='Dmitry Suschinsky' -t --hunter=0 --publish_on --published=1 --config_ids='348144'

_____
IF OK
_____

--threads_count=7 | 13140961 | 13140960

bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' --prod --stage_tbl_org --creator='Dmitry Suschinsky' -t --hunter=0 --publish_on --published=1 --config_ids='348144,348117,348134,348150,348132,348137,348168,348159,348139,348174,348158,348143,348153,348119,348127,348160,348129,348128,348146,348120,348176,348165,348140,348152,348126,348167,348164,348172,348175,348179,348163,348121,348169,348155,348131,348118,348125,348173,348130,348136,348162,348171,348122,348156,348142,348161,348154,348123,348148,348135,348141,348149,348170,348178,348157,348147,348124,348138,348177,348151,348133,348166,348145' --threads_count=7
___________________________


ФИНАЛЬНАЯ ТАБЛИЦА ДЛЯ ДЖОНА
___________________________

SELECT CONVERT(GROUP_CONCAT(job_item_id SEPARATOR ',') USING utf8)
FROM story_export_configurations_v2
WHERE tbl = "ar_prof_license_type_exp_coming_quarter_city_q_staging" AND
      export_name LIKE '%production%';

# pipeline-core-replica2.jnswire_prod query:

SELECT headline, c.name AS publication, concat('https://pipeline.locallabs.com/stories/', s.id) AS url,
       published_at, ji.name AS job_item, cc.name AS client
FROM stories AS s
JOIN communities AS c
  ON s.community_id = c.id
JOIN client_companies AS cc
  ON c.client_company_id = cc.id
JOIN data_entry_leads AS l
  ON l.id = s.lead_id
JOIN job_items AS ji
  ON l.job_item_id=ji.id
WHERE published_at >= '2020-07-29' AND
      deleted = 0 AND
      l.job_item_id IN (204642,204683,204658,204702,204648,204697,204669,204674,204676,204689,204661,204655,204681,204672,204654,204651,204659,204649,204667,204646,204684,204665,204677,204663,204664,204695,204660,204657,204644,204652,204687,204685,204666,204699,204668,204671,204645,204656,204679,204650,204698,204673,204682,204690,204691,204653,204696,204704,204700,204701,204675,204670,204678,204688,204692,204686,204680,204694,204643,204703,204693,204662,204647)
ORDER BY c.name;




REMINDER TOOL
___________________________

INSERT INTO loki_storycreator.hle_reminders
    (
        hle_assignments_number, story_type_name, story_type_stage_table,
        dev_name, slack_handle, dev_email,
        story_frequency, reminders_on, manual_export_required, reminder_frequency, reminder_message,
        last_manual_export, manual_export_blocked, on_cron, warnings_on, warning_count_min, warning_frequency, warning_fix_blocked,
        data_source_checker_on, data_source_host, data_source_db, data_source_update_query
    )
VALUES
    (
        978, 'Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)', 'ar_prof_license_type_exp_coming_quarter_city_q_staging',
        'Dmitiry Suschinsky', '@dmitiry.suschinsky', 'dsuschinsky@gmail.com',
        'year', 1, 1, 'annually', 'The Dataset located on db01.usa_raw.ca_report_card_teacher_salaries%',
        '2020-07-11', 0, 0, 0, 20000, 'annually', 0,
         1, 'db1','usa_raw', 'select date(max(postedTime)) date from usa_raw.ca_report_card_teacher_salaries;'
    );



# Creator: Dmitry Suschinsky
# Story type: Arizona - Professional License Type Expiring in the Coming Quarter (City - Quarter)
# Template: https://docs.google.com/document/d/1lOWo4Z2gWDJRq8o-4e9jll7DcuZc1alzpJsjPq9muTY/edit?usp=sharing
# Created: August 2020

# tbl: ar_prof_license_type_exp_coming_quarter_city_q_staging
# db01.usa_raw.arizona_professional_licenseing
# branch: s978_ar_prof_license_type_exp_coming_quarter_city_q_d_sushi
# s978_ar_prof_license_type_exp_coming_quarter_city_q.rb

def ar_prof_license_type_exp_coming_quarter_city_q_stage_population(line, arguments)
  db01 = Route_noprefix.new(host: DB01, raw_db: 'usa_raw')
  db01.client.query('use usa_raw;')
  db02 = Route_noprefix.new(host: DB02, stage_db: 'loki_storycreator')
  db02.client.query("use #{db02.stage_db}")
  m_biz_id    = 120
  location    = 'Arizona'
  counter     = 0
  environment = 'production'
  licenses = source_query(db01)

  licenses.each do |license|
    print 'Month: '
    print "#{license[:month]} ".yellow
    print '| licenses number: '
    print "#{license[:license_type_count]} ".green
    print "#{license[:org_id]} ".green

    m_biz_pubs   = get_journal_from_org_id(license[:org_id], environment, m_biz_id)
    mm_st_pubs   = Hle::Publications.mm_pubs_excluding_states(license[:org_id], environment, location)
    publications = mm_st_pubs + m_biz_pubs
    publications.each do |publication|

      h    = {}
      h['organization_id']           = license[:org_id]
      h['publication_id']            = publication['id'].to_i
      h['publication_name']          = publication['publication_name']
      h['client_id']                 = publication['client_id']
      h['client_name']               = publication['client_name']
      h['source_table_id']           = 22072
      h['quarter']                   = license[:quarter]
      h['city']                      = license[:city]
      h['license_type']              = license[:license_type]
      h['license_type_count']        = license[:license_type_count]
      h['story_table1']               = license[:table].to_json

      rules = insert_ignore_rules(h.escaped)
      query = "insert ignore into #{@config['target_table']}#{rules}"

      db02.client.query(query)
      counter += 1
    end
  end

  puts "Source size: #{licenses.length}"
  puts "Counter:     #{counter}"

  'INVALID' # a very important string!!!
end

def ar_prof_license_type_exp_coming_quarter_city_q_stage_creation(options)
  count = @stage_selection.count
  @stage_selection.each_with_index do |stage, i|
    print "\n PROCESSING #{i+1}/#{count}\n"

    table              = StoryTable.new.from_json(stage['story_table1']).to_html
    license_type_count = stage['license_type_count']
    license_type       = stage['license_type'].downcase
    license_type = license_type_count.to_i == 1 ? "#{license_type.gsub(' license', '')} license" : "#{license_type} licenses"
    quarter            = stage['quarter']
    city               = stage['city'].split.each(&:capitalize!).join(' ')
    url_1 = "https://elicense.az.gov/ARDC_HomePage"
    url_2 = "https://www.sba.gov/sites/default/files/advocacy/2018-Small-Business-Profiles-AZ.pdf"
    url_3 = "http://www.civiceconomics.com/indie-impact.html"

    is_are = license_type_count.to_i > 1 ? 'are' : 'is'

    count = Numbers.num_to_words(license_type_count).class == String ? Numbers.num_to_words(license_type_count).capitalize : Numbers.num_to_words(license_type_count)
    count_body = Numbers.num_to_words(license_type_count).class == String ? Numbers.num_to_words(license_type_count) : Numbers.num_to_words(license_type_count)

    export = {}
    export['headline'] = <<~HEADER.squeeze(' ').chomp
      #{license_type_count} #{license_type} #{is_are} set to expire in #{city} during Q#{quarter}
    HEADER
    export['teaser'] = <<~TEASER.squeeze(' ').chomp
      There #{is_are} #{count_body} #{license_type} set to expire in #{city} during the #{Numbers.nthification(quarter)} quarter, according to the State of Arizona.
    TEASER
    output = <<~BODY.squeeze(' ').chomp
      There #{is_are} #{count_body} #{license_type} set to expire in #{city} during the #{Numbers.nthification(quarter)} quarter, according to the #{"State of Arizona".to_link(url_1)}.
      More than 99 percent of Arizona's businesses are considered small with more than 40 percent of Arizona employees working for small businesses, according to the #{"U.S. Small Business Administration".to_link(url_2)}.
      A study by #{"Civic Economics".to_link(url_3)} found that when $100 is spent at a locally-owned business, that business puts $47 back into the local economy while the total is just $13 for non-local businesses.
      #{"#{license_type.capitalize} set to expire during Q#{quarter}".to_table_title}#{table}
    BODY
    prepare_output(stage, output, export, options)
  end
end

def source_query(db01)
  query_1 = <<~SQL
    select
        COUNT(main.id) as count,
        quarter(main.expiry_date) as quarter,
        main.issue_date as issue_date,
        main.expiry_date as expiry_date,
        main.license_type as license_type,
        main.city as city,
        main.state as state,
        org.pl_production_org_id as org_id
    from usa_raw.arizona_professional_licenseing AS main
      left join (select name, name_cleaned from usa_raw.arizona_professional_licenseing__individuals_clean) individuals
                 on main.full_name = individuals.name
        join usa_raw.usa_administrative_division_states state on state.short_name = main.state
        join usa_raw.usa_administrative_division_counties_places_matching org on main.city = org.short_name and org.state_name = state.name
    where (main.state like 'AZ%' OR main.state like 'Arizona%') and
          quarter(expiry_date) = quarter(NOW()) + 1 and
          year(expiry_date) = year(now()) and
          city is not null and
          expiry_date is not null
    group by main.city, main.license_type;
  SQL

  source_1 = db01.client.query(query_1).to_a

  licenses = []

  source_1.each do |el|
    license = {quarter: el['quarter'], city: el['city'], license_type: el['license_type'], license_type_count: el['count'], org_id: el['org_id'],
               table: StoryTable.new(header: ['License Holder', 'License Type', 'Lapse Date', 'Issued Date'], content: get_table_data(db01, el['city'], el['license_type'], el['count']))}

    licenses << license
  end
  db01.client.close

  licenses
end

def get_table_data(db01, city, license_type, count)
  query_2 = <<~SQL
    select individuals.name_cleaned as name_cleaned,
       main.license_type as license_type,
       main.expiry_date as expiry_date,
       main.issue_date as issue_date
    from usa_raw.arizona_professional_licenseing AS main
        left join (select name, name_cleaned from usa_raw.arizona_professional_licenseing__individuals_clean) individuals
        on main.full_name = individuals.name
        join usa_raw.usa_administrative_division_states state on state.short_name = main.state
        join usa_raw.usa_administrative_division_counties_places_matching org on main.city = org.short_name and org.state_name = state.name
    where (main.state like 'AZ%' OR main.state like 'Arizona%') and
          year(expiry_date) = year(now()) and
          quarter(expiry_date) = quarter(NOW()) + 1 and city = "#{city}" and
          license_type = "#{license_type}" and expiry_date is not null and
          name_cleaned is not null;
  SQL
  res = []
  db01.client.query(query_2).to_a.each do |el|
    res << [el['name_cleaned'], el['license_type'], el['expiry_date'], el['issue_date']]
  end

  raise "Wrong number counts holder licenses!" if count != res.length
  res
end
