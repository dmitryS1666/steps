California - Highest Paid Teacher compared to superintendent salary (District)
https://docs.google.com/document/d/1SWHB7e1dK6GW7FftfUyOXI80PLcEamTrxOVMDzVIsUE/edit#heading=h.gjdgxs

@john.putz
First Export. Approved by James and Kirkland
Dev Name: Dmitry S.
Story type Name: #952 California - Highest Paid Teacher compared to superintendent salary (District)
FCD: https://docs.google.com/document/d/1ZZlShrLMm46LBaCNcQDipJkYBFTKK96RtqK3FJxc3DI/edit#
Sample story: https://pipeline-staging.locallabs.com/stories/511729984
Period: 2018 - 2019
Total Count: 895
Max Project Count by client:
MB - 522
MM - 27
_____________________________________________________

STAGE TABLE DEFINITION
insert into stage_definition_configurations (tbl, definition) select 'ca_highest_paid_teacher_comp_superintendent_district_staging','{"district":"varchar(255)","max_super":"int","max_highest":"int","top_district_name":"varchar(255)","top_district":"int","top_super":"int","year":"int(4)","info_table":"longtext","story_table":"longtext"}';


#777

STAGE TABLE CREATION
bundle exec ruby Loki.rb :hle@hle_router --switch='stage_definition' --task='create_tbl' --config_id=777 -t

STAGE POPULATION CONFIGURATION
insert into stage_population_configurations(project_name, tbl, definition) select 'California - Highest Paid Teacher compared to superintendent salary (District)', 'ca_highest_paid_teacher_comp_superintendent_district_staging', '{"known_entities":{"project_name":"California - Highest Paid Teacher compared to superintendent salary (District)"},"resources":{":root":{"host":"db02","db":"loki_storycreator","tbl":"sort_by_once","identifier":"id","mapping":{}}},"stage_derivations":{"source_id":{"method":"as_int","arguments":{"raw_field":"id"}},"staging":{"stage_fields":["EMPTYSET"],"method":"ca_highest_paid_teacher_comp_superintendent_district_population","arguments":{}}}}';

population_config_id: #880

STAGE POPULATION:
$ cd ~/Loki/procedures
bundle exec ruby Loki.rb :hle@hle_router --switch='stage_population' --config_id=880 -t --threads_count=1


STORY CREATOR CONFIGURATION:
insert into storycreator_configurations (tbl, template, extension, export_arguments) select 'ca_highest_paid_teacher_comp_superintendent_district_staging', 'ca_highest_paid_teacher_comp_superintendent_district_creation', 'stories', 'where (story_created != 1 or story_created is null) and publication_name is not null and publication_name != ""';

creation_config_id: #766

STORY CREATION COMMAND:
bundle exec ruby Loki.rb :hle@hle_router --switch='story_creation' --config_id=766 -t


STAGING: STORY EXPORT CONFIGURATION
см файл ‘annual sources and output’

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=766 --population_config_id=880 --story_section_ids=2 --story_tag_ids=34 --photobuckets='High School Test' --job_item_name_description='California - Highest Paid Teacher compared to superintendent salary (District)' -t --where="client_id = 120"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=766 --population_config_id=880 --story_section_ids=16 --story_tag_ids=147 --photobuckets='High School Test' --job_item_name_description='California - Highest Paid Teacher compared to superintendent salary (District)' -t --where="stage.client_name like 'MM - %'"

STAGING: EXPORT STORIES
bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' -t -creator='Dmitry Suschinsky' --stage_tbl_org --config_id=340619



FIRST FEEDBACK
________________________________________
irb ->
load 'Loki.rb'
Hle::Story::Feedback.stories_feedback('511701546,511701553,511701552')

bundle exec ruby Loki.rb :hle_tools@stories_feedback -t --story_pl_ids=511733362,511733361,511733360


!!!!!!!!!!!!!!FCD!!!!!!!!!!!!!!!!!!!!
________________________________________________________________________________________________________________________________________

SCHEDULER:
__________
population_config_id: #880
creation_config_id: #766

tbl: ca_highest_paid_teacher_comp_superintendent_district_staging
desc: California - Highest Paid Teacher compared to superintendent salary (District)

config_id - population_config_id

3/180/july 13
bundle exec ruby Loki.rb :hle@hle_scheduler -t --config_id=880 --limit=3 --start_date='2020-07-13' --total_days_till_end_date=180

__________________________________________________
чтоб проверить шедулер, что он "окейно" отработал:

select publication_name, min(publish_on), max(publish_on), count(*) from 'ca_highest_paid_teacher_comp_superintendent_district_staging' group by publication_name;

______________________________________
PRODUCTION: STORY EXPORT CONFIGURATION
см файл ‘annual sources and output’
______________________________________

--where="client_name like 'MM - %'"

РАЗБИВКА ПО КЛИНЕТАМ!!!

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=766 --population_config_id=880 --story_section_ids=2 --story_tag_ids=147 --photobuckets='High School Test' --job_item_name_description='California - Highest Paid Teacher compared to superintendent salary (District)' -t --prod --limit_config=1 --where="client_id = 120"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=766 --population_config_id=880 --story_section_ids=16 --story_tag_ids=34 --photobuckets='High School Test' --job_item_name_description='California - Highest Paid Teacher compared to superintendent salary (District)' -t --prod --limit_config=1 --where="stage.client_name like 'MM - %'"

______________________________________

select * from story_export_configurations_v2 where tbl = 'ca_highest_paid_teacher_comp_superintendent_district_staging' and export_name like '%production%' order by id DESC;

______________________________________
если все ок, то выполняем без --limit_config=1

bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=766 --population_config_id=880 --story_section_ids=2 --story_tag_ids=147 --photobuckets='High School Test' --job_item_name_description='California - Highest Paid Teacher compared to superintendent salary (District)' -t --prod --where="client_id = 120"
bundle exec ruby Loki.rb :hle@hle_config_export --creation_config_id=766 --population_config_id=880 --story_section_ids=16 --story_tag_ids=34 --photobuckets='High School Test' --job_item_name_description='California - Highest Paid Teacher compared to superintendent salary (District)' -t --prod --where="stage.client_name like 'MM - %'"
_________
повторяем

select * from story_export_configurations_v2 where tbl = 'ca_highest_paid_teacher_comp_superintendent_district_staging' and export_name like '%production%' order by id DESC;


______________________
для построения таблицы
______________________

select s.client_name, s.publication_name, s.publication_id as project_id, ec.id as config_id, s.max_publish_on, s.total_stories from (select client_name, publication_name, publication_id, max(publish_on) as max_publish_on, count(*) as total_stories from ca_highest_paid_teacher_comp_superintendent_district_staging group by publication_name) s join (select * from story_export_configurations_v2 where tbl ='ca_highest_paid_teacher_comp_superintendent_district_staging' and export_name like '%production%') ec on ec.community_id = s.publication_id order by s.publication_name;


__________________________
PRODUCTION: EXPORT STORIES
__________________________

bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' --prod --stage_tbl_org --creator='Dmitry Suschinsky' -t --hunter=0 --publish_on --published=1 --config_ids='345718'

_____
IF OK
_____

--threads_count=7 | 13140961 | 13140960

bundle exec ruby Loki.rb :hle@hle_router --switch='story_export' --prod --stage_tbl_org --creator='Dmitry Suschinsky' -t --hunter=0 --publish_on --published=1 --config_ids='345718,345690,345706,345719,345703,345702,345731,345750,345711,345766,345724,345734,345735,345696,345737,345723,345720,345701,345704,345692,345751,345708,345729,345730,345713,345742,345726,345748,345736,345745,345746,345716,345728,345732,345697,345691,345694,345744,345710,345699,345738,345741,345698,345709,345722,345747,345715,345693,345714,345700,345717,345727,345721,345749,345752,345705,345695,345725,345743,345712,345707,345733,345740' --threads_count=7
___________________________


ФИНАЛЬНАЯ ТАБЛИЦА ДЛЯ ДЖОНА
___________________________

SELECT CONVERT(GROUP_CONCAT(job_item_id SEPARATOR ',') USING utf8)
FROM story_export_configurations_v2
WHERE tbl = "ca_highest_paid_teacher_comp_superintendent_district_staging" AND
      export_name LIKE '%production%';

# pipeline-core-replica2.jnswire_prod query:

SELECT headline, c.name AS publication, concat('https://pipeline.locallabs.com/stories/', s.id) AS url,
       published_at, ji.name AS job_item, cc.name AS client
FROM stories AS s
JOIN communities AS c
  ON s.community_id = c.id
JOIN client_companies AS cc
  ON c.client_company_id = cc.id
JOIN data_entry_leads AS l
  ON l.id = s.lead_id
JOIN job_items AS ji
  ON l.job_item_id=ji.id
WHERE published_at >= '2020-05-12' AND
      deleted = 0 AND
      l.job_item_id IN (202796,202830,202813,202849,202799,202854,202824,202833,202818,202832,202805,202816,202815,202811,202826,202819,202812,202801,202828,202822,202856,202835,202836,202831,202817,202827,202806,202809,202802,202843,202844,202829,202823,202845,202840,202810,202798,202803,202821,202800,202850,202820,202858,202814,202839,202807,202847,202851,202842,202880,202825,202846,202841,202852,202848,202853,202838,202834,202797,202855,202837,202808,202804)
ORDER BY c.name;




REMINDER TOOL
___________________________

INSERT INTO loki_storycreator.hle_reminders
    (
        hle_assignments_number, story_type_name, story_type_stage_table,
        dev_name, slack_handle, dev_email,
        story_frequency, reminders_on, manual_export_required, reminder_frequency, reminder_message,
        last_manual_export, manual_export_blocked, on_cron, warnings_on, warning_count_min, warning_frequency, warning_fix_blocked,
        data_source_checker_on, data_source_host, data_source_db, data_source_update_query
    )
VALUES
    (
        918, 'California - Highest Paid Teacher compared to superintendent salary (District)', 'ca_highest_paid_teacher_comp_superintendent_district_staging',
        'Dmitiry Suschinsky', '@dmitiry.suschinsky', 'dsuschinsky@gmail.com',
        'year', 1, 1, 'yearly', 'The Dataset located on db01.usa_raw.ca_report_card_teacher_salaries%',
        '2020-07-11', 0, 0, 0, 20000, 'yearly', 0,
         1, 'db1','usa_raw', 'select date(max(postedTime)) date from usa_raw.ca_report_card_teacher_salaries;'
    );



# Creator: Dmitry Suschinsky
# Story type: California - Highest Paid Teacher compared to superintendent salary (District)
# Template: https://docs.google.com/document/d/1VVOVqdsyilwIC5NZfjt6plqi1_1SS0lRmz7_iJxcrbY/edit?usp=sharing
# Created: July 2020

# tbl: ca_highest_paid_teacher_comp_superintendent_district_staging
# db01.usa_raw.ca_report_card_teacher_salaries & Class_Size.
# branch: s952_ca_highest_paid_teacher_comp_superintendent_district_d_sushi
# s952_ca_highest_paid_teacher_comp_superintendent_district.rb

def ca_highest_paid_teacher_comp_superintendent_district_stage_population(line, arguments)
  db02 = Route_noprefix.new(host: DB02, stage_db: 'loki_storycreator')
  db02.client.query("use #{db02.stage_db}")

  options = derive_options({})
  message = ''
  raise message if options['option'] == 'some_error'
  year = 2019
  m_biz_id = 120
  location = 'California'
  environment = 'production'
  source, table, top_district_name,
      top_district = source_query

  counter = 0
  dist_counter = 1

  source.each_with_index do |row, index|
    puts "#{index}/#{source.size} of #{dist_counter}. #{row['district']}".yellow
    puts "PL Org ID: #{row['org_id']}".green
    next if row['org_id'].nil?

    m_biz_pubs = get_journal_from_org_id(row['org_id'], environment, m_biz_id)
    m_biz_pubs   = m_biz_pubs.delete_if { |p| !p['publication_name'].match?('California') }
    mm_st_pubs = Hle::Publications.mm_pubs_excluding_states(row['org_id'], environment, location)
    publications = mm_st_pubs + m_biz_pubs
    publications.each do |publication|
      h = {}

      h['organization_id'] = row['org_id']
      h['publication_id'] = publication['id'].to_i
      h['publication_name'] = publication['publication_name']
      h['client_id'] = publication['client_id']
      h['client_name'] = publication['client_name']
      h['source_table_id'] = 21343

      h['district'] = row['district']
      h['max_mid'] = row['max_mid']
      h['average_mid_max'] = row['average_mid_max']
      h['max_highest'] = row['max_highest']
      h['top_district_name'] = top_district_name
      h['top_district'] = top_district
      h['year'] = year
      h['story_table'] = table

      rules = insert_ignore_rules(h.escaped)
      query = "insert ignore into #{@config['target_table']}#{rules}"

      db02.client.query(query)
      counter += 1
    end
  end

  puts "Source size: #{source.size}"
  puts "Counter:     #{counter}"
  db02.client.close if db02
  'INVALID' # a very important string!!!
end

def ca_highest_paid_teacher_comp_superintendent_district_stage_creation(options)
  count = @stage_selection.count
  @stage_selection.each_with_index do |stage, i|
    print "\n PROCESSING #{i+1}/#{count}\n"

    table = graph_from_json(stage['story_table'])
    year = stage['year']
    max_highest_num = stage['max_highest']
    max_mid_num = stage['max_mid']

    difference_pct_max = ((max_highest_num - max_mid_num) / max_mid_num.to_f * 100).abs.round(1)
    average_mid_max = Numbers.money(stage['average_mid_max']).gsub(/(\d\d?)\.0/, '\1')

    max_highest = Numbers.money(max_highest_num).gsub(/(\d\d?)\.0/, '\1')
    max_mid = Numbers.money(max_mid_num).gsub(/(\d\d?)\.0/, '\1')
    difference_salary = Numbers.money((max_highest_num.to_i - max_mid_num.to_i).to_i.abs).gsub(/(\d\d?)\.0/, '\1')

    top_district = stage['top_district_name']
    top_salary = Numbers.money(stage['top_district']).to_s.gsub(/(\d\d?)\.0/, '\1')
    district = stage['district']

    district_body = district == 'Santa Clara Unified' ? "Teachers in this district had the highest average pay in the state." : "The district that had the highest pay among its teachers was #{top_district} with a salary of #{top_salary}."
    url_1 = "https://www.cde.ca.gov/"
    url_2 = "https://blogs.edweek.org/teachers/teaching_now/2019/04/which_states_have_the_highest_and_lowest_teacher_salaries.html"
    url_3 = "https://learningpolicyinstitute.org/product/interactive-map-understanding-teacher-shortages-california?utm_source=LPI+Master+List&utm_campaign=d4d19cd741-LPIMC_CATeacherShortageInteractive_20191205&utm_medium=email&utm_term=0_7e60dfa1d8-d4d19cd741-42305231"

    export = {}
    export['headline'] = <<~HEADER.squeeze(' ').chomp
    Highest paid teacher in district makes #{difference_salary} more than mid-range teacher salaries
    HEADER
    export['teaser'] = <<~TEASER.squeeze(' ').chomp
    The highest salary for a teacher at #{district} was #{max_highest} while the mid-range salary was #{max_mid} during the #{year} school year.
    TEASER
    output = <<~BODY.squeeze(' ').chomp
    During the #{year} school year, the highest salary for a teacher at #{district} was #{max_highest}, according to the #{"California Department of Education.".to_link(url_1)}\
    This was #{difference_pct_max} percent more than the mid-range teacher pay in the district of #{average_mid_max} on average.
    #{district_body}

    Salaries for teachers vary widely based on geographic region. According to the #{"National Education Association".to_link(url_2)}, there is roughly a $40,000 pay difference between teachers in California and Mississippi.
    While California ranks second in average salaries according to the NEA, the #{"Learning Policy Institute".to_link(url_3)} estimates that 80 percent of its school districts are experiencing teacher shortages.
    Because of these shortages, 34 percent of newly-hired teachers have substandard teaching credentials.
			#{'Districts with the highest-paid teacher'.to_table_title}#{table}\n
    BODY

    prepare_output(stage, output, export, options)
  end
end

def source_query
  db01 = Route_noprefix.new(host: DB01, raw_db: 'usa_raw')
  db01.client.query('use usa_raw;')
  query = <<~SQL
  select max_highest.max_highest as max_highest, max_mid.max_mid as max_mid, avg_mid.average_mid_max,
       ds.district, ds.pl_production_org_id as org_id
  from usa_raw.ca_report_card_teacher_salaries year_2019
      join (select district, district_code, pl_production_org_id from usa_raw.ca_report_card_district_contact_info group by district_code) ds
          on year_2019.district_code = ds.district_code
      join (select MAX(district_amount) max_highest, district_code from usa_raw.ca_report_card_teacher_salaries WHERE category='Highest Teacher Salary' group by district_code) max_highest
          on year_2019.district_code = max_highest.district_code
      join (select MAX(district_amount) max_mid, district_code from usa_raw.ca_report_card_teacher_salaries WHERE category='Mid-Range Teacher Salary' group by district_code) max_mid
          on year_2019.district_code = max_mid.district_code
      join(select round(AVG(district_amount), 0) average_mid_max, district_code from usa_raw.ca_report_card_teacher_salaries WHERE category='Mid-Range Teacher Salary' group by district_code) avg_mid
          on year_2019.district_code = avg_mid.district_code
  where year_2019.school_year = '2018-19' and
        ds.pl_production_org_id IS NOT NULL and
        max_highest.max_highest IS NOT NULL and
        max_mid.max_mid IS NOT NULL
  group by year_2019.district_code
  order by max_highest desc;
  SQL
  result = db01.client.query(query).to_a.ranking_new!('max_highest')
  db01.client.close

  top = result.first
  top_district_name = top['district']
  top_district = top['max_highest']

  result.map { |el| el['max_highest_salary'] = Numbers.money(el['max_highest']).gsub(/(\d\d?)\.0/, '\1')}

  table = result.ranking!('max_highest').build_table(
      [
          {heading: 'Rank', column: 'rank'},
          {heading: 'District', column: 'district'},
          {heading: 'Salary', column: 'max_highest_salary'}
      ]
  )
  [result, table, top_district_name, top_district]
end